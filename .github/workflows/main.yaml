name: CI/CD
on:
  push:
    branches:
     - master
     - dev
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Install dependencies 
        run: yarn install

      - name: Typescript
        run: tsc --sourceMap false

      - name: Copy lock files
        run: |
          cp package.json dist/package.json
          cp yarn.lock dist/yarn.lock

      - name: Set env vars (dev)
        if: endsWith(github.ref, '/dev')
        run: |
          echo "FUNCTION_NAME=vuanem-netsuite-service-dev" >> $GITHUB_ENV

      - name: Set env vars (prod)
        if: endsWith(github.ref, '/master')
        run: |
          echo "FUNCTION_NAME=vuanem-netsuite-service-dev" >> $GITHUB_ENV

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to Cloud Functions
        run: >-
          gcloud functions deploy ${{ env.FUNCTION_NAME }}
          --entry-point=main
          --region=us-central1
          --timeout=240
          --project=${{ secrets.PROJECT_ID }}
          --memory=512MB
          --runtime=nodejs14
          --trigger-http
          --source=dist
          --allow-unauthenticated
          --service-account=${{ secrets.GCP_SA }}
          --set-env-vars=ACCOUNT_ID=${{ secrets.ACCOUNT_ID }},CONSUMER_KEY=${{ secrets.CONSUMER_KEY }},CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }},ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }},TOKEN_SECRET=${{ secrets.TOKEN_SECRET }},TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
